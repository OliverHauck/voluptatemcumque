// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package tgm

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ITssGroupManagerTssMember is an auto generated low-level Go binding around an user-defined struct.
type ITssGroupManagerTssMember struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}

// TssGroupManagerMetaData contains all meta data concerning the TssGroupManager contract.
var TssGroupManagerMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_groupKey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"activeTssMembers\",\"type\":\"bytes[]\"}],\"name\":\"tssActiveMemberAppended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"_inActiveTssMembers\",\"type\":\"bytes[]\"}],\"name\":\"tssGroupMemberAppend\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getTssGroupInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTssGroupMembers\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTssGroupUnJailMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTssInactiveGroupInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"getTssMember\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"enumITssGroupManager.MemberStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"structITssGroupManager.TssMember\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inActiveIsEmpty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"byteListA\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"byteListB\",\"type\":\"bytes\"}],\"name\":\"isEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isInActiveMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberExistActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberExistInActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberJail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberUnJail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"}],\"name\":\"publicKeyToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"recover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_groupPublicKey\",\"type\":\"bytes\"}],\"name\":\"setGroupPublicKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setStakingSlash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"_batchPublicKey\",\"type\":\"bytes[]\"}],\"name\":\"setTssGroupMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingSlash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tssActiveMemberInfo\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"enumITssGroupManager.MemberStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_message\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"verifySign\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b50612fa7806100206000396000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c8063715018a6116100ee578063b3bd9ac411610097578063e46a636811610071578063e46a63681461038f578063f2fde38b146103bd578063fcca5592146103d0578063fd3eb81f146103e857600080fd5b8063b3bd9ac41461033a578063bcbc5fc61461035c578063cf4c8a7b1461036f57600080fd5b80638a51d8b4116100c85780638a51d8b4146102fe5780638da5cb5b1461030757806395f645bc1461032557600080fd5b8063715018a6146102db5780637a952c11146102e35780638129fc1c146102f657600080fd5b8063404a6986116101505780634679b3661161012a5780634679b366146102955780634866e2e0146102a857806354bbb914146102bb57600080fd5b8063404a698614610258578063429ec49c1461026f57806343ae656c1461028257600080fd5b80632cd00d53116101815780632cd00d531461020d5780633231a7f014610222578063343598081461024557600080fd5b806319045a25146101a85780631a47931b146101e5578063254ff981146101fa575b600080fd5b6101bb6101b63660046127eb565b6103fb565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101f86101f3366004612832565b61050f565b005b6101f8610208366004612901565b610895565b61021561096e565b6040516101dc919061293e565b6102356102303660046127eb565b610b8e565b60405190151581526020016101dc565b610235610253366004612998565b610bd2565b610260610c94565b6040516101dc93929190612ac1565b6101f861027d366004612901565b610d7f565b6101bb610290366004612901565b610e1e565b6101f86102a3366004612998565b610e7d565b6102356102b6366004612901565b6111d7565b6102ce6102c9366004612901565b611202565b6040516101dc9190612b53565b6101f861134a565b6101f86102f1366004612901565b61135e565b6101f8611520565b609e5415610235565b60335473ffffffffffffffffffffffffffffffffffffffff166101bb565b61032d61168a565b6040516101dc9190612bab565b61034d610348366004612901565b611763565b6040516101dc93929190612bc5565b61023561036a366004612901565b611846565b609c546101bb9073ffffffffffffffffffffffffffffffffffffffff1681565b61023561039d366004612901565b805160208183018101805160a38252928201919093012091525460ff1681565b6101f86103cb366004612c03565b61188b565b6103d8611925565b6040516101dc9493929190612c39565b6101f86103f6366004612c03565b611c31565b60008060008061040a85611c80565b92509250925060006001878386866040516000815260200160405260405161044e949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610470573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166105035760405162461bcd60e51b815260206004820152601060248201527f65637265636f766572206661696c65640000000000000000000000000000000060448201526064015b60405180910390fd5b93505050505b92915050565b610517611d09565b60008151116105685760405162461bcd60e51b815260206004820152601960248201527f6261746368207075626c6963206b657920697320656d7074790000000000000060448201526064016104fa565b805182106105de5760405162461bcd60e51b815260206004820152602360248201527f7468726573686f6c64206d757374206c657373207468616e20747373206d656d60448201527f626572000000000000000000000000000000000000000000000000000000000060648201526084016104fa565b609e54156107395760005b609e5481101561072c5760a160a0609e838154811061060a5761060a612c75565b906000526020600020016040516106219190612cf8565b90815260405190819003602001812061063991612cf8565b90815260200160405180910390206000905560a0609e828154811061066057610660612c75565b906000526020600020016040516106779190612cf8565b908152602001604051809103902060006106919190612556565b60a2609e82815481106106a6576106a6612c75565b906000526020600020016040516106bd9190612cf8565b908152604051908190036020019020805460ff19169055609e805460a39190839081106106ec576106ec612c75565b906000526020600020016040516107039190612cf8565b908152604051908190036020019020805460ff191690558061072481612d99565b9150506105e9565b50610739609e6000612590565b60005b815181101561083957609e82828151811061075957610759612c75565b6020908102919091018101518254600181018455600093845292829020815161078b94919091019291909101906125ae565b50600160a38383815181106107a2576107a2612c75565b60200260200101516040516107b79190612dd2565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600060a28383815181106107f2576107f2612c75565b60200260200101516040516108079190612dd2565b908152604051908190036020019020805491151560ff199092169190911790558061083181612d99565b91505061073c565b506099829055609a5461084d906001612dee565b609a8190556000609b556040517ffa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e916108899185908590612ac1565b60405180910390a15050565b609c5473ffffffffffffffffffffffffffffffffffffffff1633146109225760405162461bcd60e51b815260206004820152602560248201527f636f6e74726163742063616c6c206973206e6f74207374616b696e6720736c6160448201527f7368696e6700000000000000000000000000000000000000000000000000000060648201526084016104fa565b6001609f826040516109349190612dd2565b908152602001604051809103902060010160146101000a81548160ff0219169083600181111561096657610966612ae9565b021790555050565b60606000805b609d5461098390600190612e06565b811015610a0e576000609f609d83815481106109a1576109a1612c75565b906000526020600020016040516109b89190612cf8565b908152602001604051809103902060010160149054906101000a900460ff1660018111156109e8576109e8612ae9565b14156109fc57816109f881612d99565b9250505b80610a0681612d99565b915050610974565b5060008167ffffffffffffffff811115610a2a57610a2a6126df565b604051908082528060200260200182016040528015610a53578160200160208202803683370190505b5090506000805b609d54610a6990600190612e06565b811015610b85576000609f609d8381548110610a8757610a87612c75565b90600052602060002001604051610a9e9190612cf8565b908152602001604051809103902060010160149054906101000a900460ff166001811115610ace57610ace612ae9565b1415610b7357609f609d8281548110610ae957610ae9612c75565b90600052602060002001604051610b009190612cf8565b90815260405190819003602001902060010154835173ffffffffffffffffffffffffffffffffffffffff90911690849084908110610b4057610b40612c75565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015281610b6f81612d99565b9250505b80610b7d81612d99565b915050610a5a565b50909392505050565b60985460009073ffffffffffffffffffffffffffffffffffffffff16610bb484846103fb565b73ffffffffffffffffffffffffffffffffffffffff16149392505050565b60008151835114610be557506000610509565b60005b8351811015610c8a57828181518110610c0357610c03612c75565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916848281518110610c4257610c42612c75565b01602001517fff000000000000000000000000000000000000000000000000000000000000001614610c78576000915050610509565b80610c8281612d99565b915050610be8565b5060019392505050565b6000806060609a54609954609e80805480602002602001604051908101604052809291908181526020016000905b82821015610d6e578382906000526020600020018054610ce190612ca4565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0d90612ca4565b8015610d5a5780601f10610d2f57610100808354040283529160200191610d5a565b820191906000526020600020905b815481529060010190602001808311610d3d57829003601f168201915b505050505081526020019060010190610cc2565b505050509050925092509250909192565b609c5473ffffffffffffffffffffffffffffffffffffffff163314610e0c5760405162461bcd60e51b815260206004820152602560248201527f636f6e74726163742063616c6c206973206e6f74207374616b696e6720736c6160448201527f7368696e6700000000000000000000000000000000000000000000000000000060648201526084016104fa565b6000609f826040516109349190612dd2565b60008151604014610e715760405162461bcd60e51b815260206004820152601f60248201527f7075626c6963206b6579206c656e677468206d7573742036342062797465730060448201526064016104fa565b50805160209091012090565b60a382604051610e8d9190612dd2565b9081526040519081900360200190205460ff161515600114610f175760405162461bcd60e51b815260206004820152602860248201527f796f7572207075626c6963206b6579206973206e6f7420696e20496e4163746960448201527f76654d656d62657200000000000000000000000000000000000000000000000060648201526084016104fa565b610f2082610e1e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f9a5760405162461bcd60e51b815260206004820152601460248201527f7075626c6963206b6579206e6f74206d6174636800000000000000000000000060448201526064016104fa565b60a282604051610faa9190612dd2565b9081526040519081900360200190205460ff1661100557600160a283604051610fd39190612dd2565b908152604051908190036020019020805491151560ff19909216919091179055609b54611001906001612dee565b609b555b6110b560a0836040516110189190612dd2565b9081526020016040518091039020805461103190612ca4565b80601f016020809104026020016040519081016040528092919081815260200182805461105d90612ca4565b80156110aa5780601f1061107f576101008083540402835291602001916110aa565b820191906000526020600020905b81548152906001019060200180831161108d57829003601f168201915b505050505082610bd2565b6111a157600160a1826040516110cb9190612dd2565b908152602001604051809103902060008282546110e89190612dee565b909155505060405160a0906110fe908490612dd2565b9081526020016040518091039020805461111790612ca4565b15905061116d57600160a160a0846040516111329190612dd2565b90815260405190819003602001812061114a91612cf8565b908152602001604051809103902060008282546111679190612e06565b90915550505b8060a08360405161117e9190612dd2565b9081526020016040518091039020908051906020019061119f9291906125ae565b505b609e5460405160a1906111b5908490612dd2565b90815260200160405180910390205414156111d3576111d381611d70565b5050565b600060a3826040516111e99190612dd2565b9081526040519081900360200190205460ff1692915050565b61122360408051606080820183528152600060208201819052909182015290565b609f826040516112339190612dd2565b908152602001604051809103902060405180606001604052908160008201805461125c90612ca4565b80601f016020809104026020016040519081016040528092919081815260200182805461128890612ca4565b80156112d55780601f106112aa576101008083540402835291602001916112d5565b820191906000526020600020905b8154815290600101906020018083116112b857829003601f168201915b505050918352505060018281015473ffffffffffffffffffffffffffffffffffffffff8116602084015260409092019174010000000000000000000000000000000000000000900460ff169081111561133057611330612ae9565b600181111561134157611341612ae9565b90525092915050565b611352611d09565b61135c60006122cf565b565b609c5473ffffffffffffffffffffffffffffffffffffffff1633146113eb5760405162461bcd60e51b815260206004820152602560248201527f636f6e74726163742063616c6c206973206e6f74207374616b696e6720736c6160448201527f7368696e6700000000000000000000000000000000000000000000000000000060648201526084016104fa565b60005b609d548110156114c7576114a7609d828154811061140e5761140e612c75565b90600052602060002001805461142390612ca4565b80601f016020809104026020016040519081016040528092919081815260200182805461144f90612ca4565b801561149c5780601f106114715761010080835404028352916020019161149c565b820191906000526020600020905b81548152906001019060200180831161147f57829003601f168201915b505050505083610bd2565b156114b5576114b581612346565b806114bf81612d99565b9150506113ee565b50609f816040516114d89190612dd2565b90815260405190819003602001902060006114f38282612556565b5060010180547fffffffffffffffffffffff00000000000000000000000000000000000000000016905550565b600054610100900460ff16158080156115405750600054600160ff909116105b8061155a5750303b15801561155a575060005460ff166001145b6115cc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016104fa565b6000805460ff19166001179055801561160c57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b611614612450565b6000609a819055609b819055609955801561168757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b50565b6060609d805480602002602001604051908101604052809291908181526020016000905b8282101561175a5783829060005260206000200180546116cd90612ca4565b80601f01602080910402602001604051908101604052809291908181526020018280546116f990612ca4565b80156117465780601f1061171b57610100808354040283529160200191611746565b820191906000526020600020905b81548152906001019060200180831161172957829003601f168201915b5050505050815260200190600101906116ae565b50505050905090565b8051602081830181018051609f8252928201919093012091528054819061178990612ca4565b80601f01602080910402602001604051908101604052809291908181526020018280546117b590612ca4565b80156118025780601f106117d757610100808354040283529160200191611802565b820191906000526020600020905b8154815290600101906020018083116117e557829003601f168201915b5050506001909301549192505073ffffffffffffffffffffffffffffffffffffffff81169060ff740100000000000000000000000000000000000000009091041683565b600080609f836040516118599190612dd2565b908152604051908190036020019020805461187390612ca4565b9050111561188357506001919050565b506000919050565b611893611d09565b73ffffffffffffffffffffffffffffffffffffffff811661191c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104fa565b611687816122cf565b609e546000908190606090819015611ab9576001609a546119469190612e06565b6099546097609d81805461195990612ca4565b80601f016020809104026020016040519081016040528092919081815260200182805461198590612ca4565b80156119d25780601f106119a7576101008083540402835291602001916119d2565b820191906000526020600020905b8154815290600101906020018083116119b557829003601f168201915b5050505050915080805480602002602001604051908101604052809291908181526020016000905b82821015611aa6578382906000526020600020018054611a1990612ca4565b80601f0160208091040260200160405190810160405280929190818152602001828054611a4590612ca4565b8015611a925780601f10611a6757610100808354040283529160200191611a92565b820191906000526020600020905b815481529060010190602001808311611a7557829003601f168201915b5050505050815260200190600101906119fa565b5050505090509350935093509350611c2b565b609a546099546097609d818054611acf90612ca4565b80601f0160208091040260200160405190810160405280929190818152602001828054611afb90612ca4565b8015611b485780601f10611b1d57610100808354040283529160200191611b48565b820191906000526020600020905b815481529060010190602001808311611b2b57829003601f168201915b5050505050915080805480602002602001604051908101604052809291908181526020016000905b82821015611c1c578382906000526020600020018054611b8f90612ca4565b80601f0160208091040260200160405190810160405280929190818152602001828054611bbb90612ca4565b8015611c085780601f10611bdd57610100808354040283529160200191611c08565b820191906000526020600020905b815481529060010190602001808311611beb57829003601f168201915b505050505081526020019060010190611b70565b50505050905093509350935093505b90919293565b611c39611d09565b609c80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008060008351604114611cd65760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016104fa565b50505060208101516040820151606083015160001a601b811015611d0257611cff601b82612e1d565b90505b9193909250565b60335473ffffffffffffffffffffffffffffffffffffffff16331461135c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104fa565b609d5415611e155760005b609d54811015611e0857609f609d8281548110611d9a57611d9a612c75565b90600052602060002001604051611db19190612cf8565b9081526040519081900360200190206000611dcc8282612556565b5060010180547fffffffffffffffffffffff00000000000000000000000000000000000000000016905580611e0081612d99565b915050611d7b565b50611e15609d6000612590565b60005b609e5481101561222a57609d609e8281548110611e3757611e37612c75565b600091825260208083208454600181018655948452922091018054919092019190611e6190612ca4565b611e6c929190612632565b506040518060600160405280609e8381548110611e8b57611e8b612c75565b906000526020600020018054611ea090612ca4565b80601f0160208091040260200160405190810160405280929190818152602001828054611ecc90612ca4565b8015611f195780601f10611eee57610100808354040283529160200191611f19565b820191906000526020600020905b815481529060010190602001808311611efc57829003601f168201915b50505050508152602001611fd1609e8481548110611f3957611f39612c75565b906000526020600020018054611f4e90612ca4565b80601f0160208091040260200160405190810160405280929190818152602001828054611f7a90612ca4565b8015611fc75780601f10611f9c57610100808354040283529160200191611fc7565b820191906000526020600020905b815481529060010190602001808311611faa57829003601f168201915b5050505050610e1e565b73ffffffffffffffffffffffffffffffffffffffff1681526020016000815250609f609e838154811061200657612006612c75565b9060005260206000200160405161201d9190612cf8565b908152602001604051809103902060008201518160000190805190602001906120479291906125ae565b5060208201516001808301805473ffffffffffffffffffffffffffffffffffffffff9093167fffffffffffffffffffffffff000000000000000000000000000000000000000084168117825560408601519391927fffffffffffffffffffffff0000000000000000000000000000000000000000009092161790740100000000000000000000000000000000000000009084908111156120e9576120e9612ae9565b021790555090505060a160a0609e838154811061210857612108612c75565b9060005260206000200160405161211f9190612cf8565b90815260405190819003602001812061213791612cf8565b90815260200160405180910390206000905560a0609e828154811061215e5761215e612c75565b906000526020600020016040516121759190612cf8565b9081526020016040518091039020600061218f9190612556565b60a2609e82815481106121a4576121a4612c75565b906000526020600020016040516121bb9190612cf8565b908152604051908190036020019020805460ff19169055609e805460a39190839081106121ea576121ea612c75565b906000526020600020016040516122019190612cf8565b908152604051908190036020019020805460ff191690558061222281612d99565b915050611e18565b50612237609e6000612590565b805161224a9060979060208401906125ae565b5061225481610e1e565b609880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055609a546040517f61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b669161167e918490609d90612e42565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b609d5481106123975760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e64000000000000000000000000000060448201526064016104fa565b805b609d546123a890600190612e06565b81101561241d57609d6123bc826001612dee565b815481106123cc576123cc612c75565b90600052602060002001609d82815481106123e9576123e9612c75565b906000526020600020019080546123ff90612ca4565b61240a929190612632565b508061241581612d99565b915050612399565b50609d80548061242f5761242f612f42565b60019003818190600052602060002001600061244b9190612556565b905550565b600054610100900460ff166124cd5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016104fa565b61135c600054610100900460ff1661254d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016104fa565b61135c336122cf565b50805461256290612ca4565b6000825580601f10612572575050565b601f01602090049060005260206000209081019061168791906126ad565b508054600082559060005260206000209081019061168791906126c2565b8280546125ba90612ca4565b90600052602060002090601f0160209004810192826125dc5760008555612622565b82601f106125f557805160ff1916838001178555612622565b82800160010185558215612622579182015b82811115612622578251825591602001919060010190612607565b5061262e9291506126ad565b5090565b82805461263e90612ca4565b90600052602060002090601f0160209004810192826126605760008555612622565b82601f106126715780548555612622565b8280016001018555821561262257600052602060002091601f016020900482015b82811115612622578254825591600101919060010190612692565b5b8082111561262e57600081556001016126ae565b8082111561262e5760006126d68282612556565b506001016126c2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612755576127556126df565b604052919050565b600082601f83011261276e57600080fd5b813567ffffffffffffffff811115612788576127886126df565b6127b960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161270e565b8181528460208386010111156127ce57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156127fe57600080fd5b82359150602083013567ffffffffffffffff81111561281c57600080fd5b6128288582860161275d565b9150509250929050565b6000806040838503121561284557600080fd5b8235915060208084013567ffffffffffffffff8082111561286557600080fd5b818601915086601f83011261287957600080fd5b81358181111561288b5761288b6126df565b8060051b61289a85820161270e565b918252838101850191858101908a8411156128b457600080fd5b86860192505b838310156128f0578235858111156128d25760008081fd5b6128e08c89838a010161275d565b83525091860191908601906128ba565b809750505050505050509250929050565b60006020828403121561291357600080fd5b813567ffffffffffffffff81111561292a57600080fd5b6129368482850161275d565b949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561298c57835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010161295a565b50909695505050505050565b600080604083850312156129ab57600080fd5b823567ffffffffffffffff808211156129c357600080fd5b6129cf8683870161275d565b935060208501359150808211156129e557600080fd5b506128288582860161275d565b60005b83811015612a0d5781810151838201526020016129f5565b83811115612a1c576000848401525b50505050565b60008151808452612a3a8160208601602086016129f2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b85811015612ab4578284038952612aa2848351612a22565b98850198935090840190600101612a8a565b5091979650505050505050565b838152826020820152606060408201526000612ae06060830184612a6c565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110612b4f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b602081526000825160606020840152612b6f6080840182612a22565b905073ffffffffffffffffffffffffffffffffffffffff60208501511660408401526040840151612ba36060850182612b18565b509392505050565b602081526000612bbe6020830184612a6c565b9392505050565b606081526000612bd86060830186612a22565b905073ffffffffffffffffffffffffffffffffffffffff841660208301526129366040830184612b18565b600060208284031215612c1557600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114612bbe57600080fd5b848152836020820152608060408201526000612c586080830185612a22565b8281036060840152612c6a8185612a6c565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680612cb857607f821691505b60208210811415612cf2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000808354612d0681612ca4565b60018281168015612d1e5760018114612d2f57612d5e565b60ff19841687528287019450612d5e565b8760005260208060002060005b85811015612d555781548a820152908401908201612d3c565b50505082870194505b50929695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612dcb57612dcb612d6a565b5060010190565b60008251612de48184602087016129f2565b9190910192915050565b60008219821115612e0157612e01612d6a565b500190565b600082821015612e1857612e18612d6a565b500390565b600060ff821660ff84168060ff03821115612e3a57612e3a612d6a565b019392505050565b83815260006020606081840152612e5c6060840186612a22565b83810360408501528085548083528383019150838160051b8401016000888152858120815b84811015612f31577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0878503018652828254612ebc81612ca4565b80875260018281168015612ed75760018114612eeb57612f1a565b60ff1984168d8a0152604089019450612f1a565b8688528c8820885b84811015612f125781548f828d01015283820191508e81019050612ef3565b8a018e019550505b50988b019892965050509190910190600101612e81565b50919b9a5050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220c1a079a6fca15e04c06bb7369da2729500ca02eb011ea992f5d89054731573d564736f6c63430008090033",
}

// TssGroupManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use TssGroupManagerMetaData.ABI instead.
var TssGroupManagerABI = TssGroupManagerMetaData.ABI

// TssGroupManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use TssGroupManagerMetaData.Bin instead.
var TssGroupManagerBin = TssGroupManagerMetaData.Bin

// DeployTssGroupManager deploys a new Ethereum contract, binding an instance of TssGroupManager to it.
func DeployTssGroupManager(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *TssGroupManager, error) {
	parsed, err := TssGroupManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(TssGroupManagerBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &TssGroupManager{TssGroupManagerCaller: TssGroupManagerCaller{contract: contract}, TssGroupManagerTransactor: TssGroupManagerTransactor{contract: contract}, TssGroupManagerFilterer: TssGroupManagerFilterer{contract: contract}}, nil
}

// TssGroupManager is an auto generated Go binding around an Ethereum contract.
type TssGroupManager struct {
	TssGroupManagerCaller     // Read-only binding to the contract
	TssGroupManagerTransactor // Write-only binding to the contract
	TssGroupManagerFilterer   // Log filterer for contract events
}

// TssGroupManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type TssGroupManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TssGroupManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TssGroupManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TssGroupManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TssGroupManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TssGroupManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TssGroupManagerSession struct {
	Contract     *TssGroupManager  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TssGroupManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TssGroupManagerCallerSession struct {
	Contract *TssGroupManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// TssGroupManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TssGroupManagerTransactorSession struct {
	Contract     *TssGroupManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// TssGroupManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type TssGroupManagerRaw struct {
	Contract *TssGroupManager // Generic contract binding to access the raw methods on
}

// TssGroupManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TssGroupManagerCallerRaw struct {
	Contract *TssGroupManagerCaller // Generic read-only contract binding to access the raw methods on
}

// TssGroupManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TssGroupManagerTransactorRaw struct {
	Contract *TssGroupManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTssGroupManager creates a new instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManager(address common.Address, backend bind.ContractBackend) (*TssGroupManager, error) {
	contract, err := bindTssGroupManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &TssGroupManager{TssGroupManagerCaller: TssGroupManagerCaller{contract: contract}, TssGroupManagerTransactor: TssGroupManagerTransactor{contract: contract}, TssGroupManagerFilterer: TssGroupManagerFilterer{contract: contract}}, nil
}

// NewTssGroupManagerCaller creates a new read-only instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManagerCaller(address common.Address, caller bind.ContractCaller) (*TssGroupManagerCaller, error) {
	contract, err := bindTssGroupManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerCaller{contract: contract}, nil
}

// NewTssGroupManagerTransactor creates a new write-only instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*TssGroupManagerTransactor, error) {
	contract, err := bindTssGroupManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerTransactor{contract: contract}, nil
}

// NewTssGroupManagerFilterer creates a new log filterer instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*TssGroupManagerFilterer, error) {
	contract, err := bindTssGroupManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerFilterer{contract: contract}, nil
}

// bindTssGroupManager binds a generic wrapper to an already deployed contract.
func bindTssGroupManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := TssGroupManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TssGroupManager *TssGroupManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TssGroupManager.Contract.TssGroupManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TssGroupManager *TssGroupManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TssGroupManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TssGroupManager *TssGroupManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TssGroupManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TssGroupManager *TssGroupManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TssGroupManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TssGroupManager *TssGroupManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TssGroupManager *TssGroupManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TssGroupManager.Contract.contract.Transact(opts, method, params...)
}

// GetTssGroupInfo is a free data retrieval call binding the contract method 0xfcca5592.
//
// Solidity: function getTssGroupInfo() view returns(uint256, uint256, bytes, bytes[])
func (_TssGroupManager *TssGroupManagerCaller) GetTssGroupInfo(opts *bind.CallOpts) (*big.Int, *big.Int, []byte, [][]byte, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "getTssGroupInfo")

	if err != nil {
		return *new(*big.Int), *new(*big.Int), *new([]byte), *new([][]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	out2 := *abi.ConvertType(out[2], new([]byte)).(*[]byte)
	out3 := *abi.ConvertType(out[3], new([][]byte)).(*[][]byte)

	return out0, out1, out2, out3, err

}

// GetTssGroupInfo is a free data retrieval call binding the contract method 0xfcca5592.
//
// Solidity: function getTssGroupInfo() view returns(uint256, uint256, bytes, bytes[])
func (_TssGroupManager *TssGroupManagerSession) GetTssGroupInfo() (*big.Int, *big.Int, []byte, [][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupInfo(&_TssGroupManager.CallOpts)
}

// GetTssGroupInfo is a free data retrieval call binding the contract method 0xfcca5592.
//
// Solidity: function getTssGroupInfo() view returns(uint256, uint256, bytes, bytes[])
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssGroupInfo() (*big.Int, *big.Int, []byte, [][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupInfo(&_TssGroupManager.CallOpts)
}

// GetTssGroupMembers is a free data retrieval call binding the contract method 0x95f645bc.
//
// Solidity: function getTssGroupMembers() view returns(bytes[])
func (_TssGroupManager *TssGroupManagerCaller) GetTssGroupMembers(opts *bind.CallOpts) ([][]byte, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "getTssGroupMembers")

	if err != nil {
		return *new([][]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([][]byte)).(*[][]byte)

	return out0, err

}

// GetTssGroupMembers is a free data retrieval call binding the contract method 0x95f645bc.
//
// Solidity: function getTssGroupMembers() view returns(bytes[])
func (_TssGroupManager *TssGroupManagerSession) GetTssGroupMembers() ([][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupMembers(&_TssGroupManager.CallOpts)
}

// GetTssGroupMembers is a free data retrieval call binding the contract method 0x95f645bc.
//
// Solidity: function getTssGroupMembers() view returns(bytes[])
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssGroupMembers() ([][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupMembers(&_TssGroupManager.CallOpts)
}

// GetTssGroupUnJailMembers is a free data retrieval call binding the contract method 0x2cd00d53.
//
// Solidity: function getTssGroupUnJailMembers() view returns(address[])
func (_TssGroupManager *TssGroupManagerCaller) GetTssGroupUnJailMembers(opts *bind.CallOpts) ([]common.Address, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "getTssGroupUnJailMembers")

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetTssGroupUnJailMembers is a free data retrieval call binding the contract method 0x2cd00d53.
//
// Solidity: function getTssGroupUnJailMembers() view returns(address[])
func (_TssGroupManager *TssGroupManagerSession) GetTssGroupUnJailMembers() ([]common.Address, error) {
	return _TssGroupManager.Contract.GetTssGroupUnJailMembers(&_TssGroupManager.CallOpts)
}

// GetTssGroupUnJailMembers is a free data retrieval call binding the contract method 0x2cd00d53.
//
// Solidity: function getTssGroupUnJailMembers() view returns(address[])
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssGroupUnJailMembers() ([]common.Address, error) {
	return _TssGroupManager.Contract.GetTssGroupUnJailMembers(&_TssGroupManager.CallOpts)
}

// GetTssInactiveGroupInfo is a free data retrieval call binding the contract method 0x404a6986.
//
// Solidity: function getTssInactiveGroupInfo() view returns(uint256, uint256, bytes[])
func (_TssGroupManager *TssGroupManagerCaller) GetTssInactiveGroupInfo(opts *bind.CallOpts) (*big.Int, *big.Int, [][]byte, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "getTssInactiveGroupInfo")

	if err != nil {
		return *new(*big.Int), *new(*big.Int), *new([][]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	out2 := *abi.ConvertType(out[2], new([][]byte)).(*[][]byte)

	return out0, out1, out2, err

}

// GetTssInactiveGroupInfo is a free data retrieval call binding the contract method 0x404a6986.
//
// Solidity: function getTssInactiveGroupInfo() view returns(uint256, uint256, bytes[])
func (_TssGroupManager *TssGroupManagerSession) GetTssInactiveGroupInfo() (*big.Int, *big.Int, [][]byte, error) {
	return _TssGroupManager.Contract.GetTssInactiveGroupInfo(&_TssGroupManager.CallOpts)
}

// GetTssInactiveGroupInfo is a free data retrieval call binding the contract method 0x404a6986.
//
// Solidity: function getTssInactiveGroupInfo() view returns(uint256, uint256, bytes[])
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssInactiveGroupInfo() (*big.Int, *big.Int, [][]byte, error) {
	return _TssGroupManager.Contract.GetTssInactiveGroupInfo(&_TssGroupManager.CallOpts)
}

// GetTssMember is a free data retrieval call binding the contract method 0x54bbb914.
//
// Solidity: function getTssMember(bytes _publicKey) view returns((bytes,address,uint8))
func (_TssGroupManager *TssGroupManagerCaller) GetTssMember(opts *bind.CallOpts, _publicKey []byte) (ITssGroupManagerTssMember, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "getTssMember", _publicKey)

	if err != nil {
		return *new(ITssGroupManagerTssMember), err
	}

	out0 := *abi.ConvertType(out[0], new(ITssGroupManagerTssMember)).(*ITssGroupManagerTssMember)

	return out0, err

}

// GetTssMember is a free data retrieval call binding the contract method 0x54bbb914.
//
// Solidity: function getTssMember(bytes _publicKey) view returns((bytes,address,uint8))
func (_TssGroupManager *TssGroupManagerSession) GetTssMember(_publicKey []byte) (ITssGroupManagerTssMember, error) {
	return _TssGroupManager.Contract.GetTssMember(&_TssGroupManager.CallOpts, _publicKey)
}

// GetTssMember is a free data retrieval call binding the contract method 0x54bbb914.
//
// Solidity: function getTssMember(bytes _publicKey) view returns((bytes,address,uint8))
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssMember(_publicKey []byte) (ITssGroupManagerTssMember, error) {
	return _TssGroupManager.Contract.GetTssMember(&_TssGroupManager.CallOpts, _publicKey)
}

// InActiveIsEmpty is a free data retrieval call binding the contract method 0x8a51d8b4.
//
// Solidity: function inActiveIsEmpty() view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) InActiveIsEmpty(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "inActiveIsEmpty")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// InActiveIsEmpty is a free data retrieval call binding the contract method 0x8a51d8b4.
//
// Solidity: function inActiveIsEmpty() view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) InActiveIsEmpty() (bool, error) {
	return _TssGroupManager.Contract.InActiveIsEmpty(&_TssGroupManager.CallOpts)
}

// InActiveIsEmpty is a free data retrieval call binding the contract method 0x8a51d8b4.
//
// Solidity: function inActiveIsEmpty() view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) InActiveIsEmpty() (bool, error) {
	return _TssGroupManager.Contract.InActiveIsEmpty(&_TssGroupManager.CallOpts)
}

// IsEqual is a free data retrieval call binding the contract method 0x34359808.
//
// Solidity: function isEqual(bytes byteListA, bytes byteListB) pure returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) IsEqual(opts *bind.CallOpts, byteListA []byte, byteListB []byte) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "isEqual", byteListA, byteListB)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsEqual is a free data retrieval call binding the contract method 0x34359808.
//
// Solidity: function isEqual(bytes byteListA, bytes byteListB) pure returns(bool)
func (_TssGroupManager *TssGroupManagerSession) IsEqual(byteListA []byte, byteListB []byte) (bool, error) {
	return _TssGroupManager.Contract.IsEqual(&_TssGroupManager.CallOpts, byteListA, byteListB)
}

// IsEqual is a free data retrieval call binding the contract method 0x34359808.
//
// Solidity: function isEqual(bytes byteListA, bytes byteListB) pure returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) IsEqual(byteListA []byte, byteListB []byte) (bool, error) {
	return _TssGroupManager.Contract.IsEqual(&_TssGroupManager.CallOpts, byteListA, byteListB)
}

// IsInActiveMember is a free data retrieval call binding the contract method 0xe46a6368.
//
// Solidity: function isInActiveMember(bytes ) view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) IsInActiveMember(opts *bind.CallOpts, arg0 []byte) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "isInActiveMember", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsInActiveMember is a free data retrieval call binding the contract method 0xe46a6368.
//
// Solidity: function isInActiveMember(bytes ) view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) IsInActiveMember(arg0 []byte) (bool, error) {
	return _TssGroupManager.Contract.IsInActiveMember(&_TssGroupManager.CallOpts, arg0)
}

// IsInActiveMember is a free data retrieval call binding the contract method 0xe46a6368.
//
// Solidity: function isInActiveMember(bytes ) view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) IsInActiveMember(arg0 []byte) (bool, error) {
	return _TssGroupManager.Contract.IsInActiveMember(&_TssGroupManager.CallOpts, arg0)
}

// MemberExistActive is a free data retrieval call binding the contract method 0xbcbc5fc6.
//
// Solidity: function memberExistActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) MemberExistActive(opts *bind.CallOpts, _publicKey []byte) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "memberExistActive", _publicKey)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// MemberExistActive is a free data retrieval call binding the contract method 0xbcbc5fc6.
//
// Solidity: function memberExistActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) MemberExistActive(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistActive(&_TssGroupManager.CallOpts, _publicKey)
}

// MemberExistActive is a free data retrieval call binding the contract method 0xbcbc5fc6.
//
// Solidity: function memberExistActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) MemberExistActive(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistActive(&_TssGroupManager.CallOpts, _publicKey)
}

// MemberExistInActive is a free data retrieval call binding the contract method 0x4866e2e0.
//
// Solidity: function memberExistInActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) MemberExistInActive(opts *bind.CallOpts, _publicKey []byte) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "memberExistInActive", _publicKey)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// MemberExistInActive is a free data retrieval call binding the contract method 0x4866e2e0.
//
// Solidity: function memberExistInActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) MemberExistInActive(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistInActive(&_TssGroupManager.CallOpts, _publicKey)
}

// MemberExistInActive is a free data retrieval call binding the contract method 0x4866e2e0.
//
// Solidity: function memberExistInActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) MemberExistInActive(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistInActive(&_TssGroupManager.CallOpts, _publicKey)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_TssGroupManager *TssGroupManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_TssGroupManager *TssGroupManagerSession) Owner() (common.Address, error) {
	return _TssGroupManager.Contract.Owner(&_TssGroupManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_TssGroupManager *TssGroupManagerCallerSession) Owner() (common.Address, error) {
	return _TssGroupManager.Contract.Owner(&_TssGroupManager.CallOpts)
}

// PublicKeyToAddress is a free data retrieval call binding the contract method 0x43ae656c.
//
// Solidity: function publicKeyToAddress(bytes publicKey) pure returns(address)
func (_TssGroupManager *TssGroupManagerCaller) PublicKeyToAddress(opts *bind.CallOpts, publicKey []byte) (common.Address, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "publicKeyToAddress", publicKey)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PublicKeyToAddress is a free data retrieval call binding the contract method 0x43ae656c.
//
// Solidity: function publicKeyToAddress(bytes publicKey) pure returns(address)
func (_TssGroupManager *TssGroupManagerSession) PublicKeyToAddress(publicKey []byte) (common.Address, error) {
	return _TssGroupManager.Contract.PublicKeyToAddress(&_TssGroupManager.CallOpts, publicKey)
}

// PublicKeyToAddress is a free data retrieval call binding the contract method 0x43ae656c.
//
// Solidity: function publicKeyToAddress(bytes publicKey) pure returns(address)
func (_TssGroupManager *TssGroupManagerCallerSession) PublicKeyToAddress(publicKey []byte) (common.Address, error) {
	return _TssGroupManager.Contract.PublicKeyToAddress(&_TssGroupManager.CallOpts, publicKey)
}

// Recover is a free data retrieval call binding the contract method 0x19045a25.
//
// Solidity: function recover(bytes32 _ethSignedMessageHash, bytes _sig) pure returns(address)
func (_TssGroupManager *TssGroupManagerCaller) Recover(opts *bind.CallOpts, _ethSignedMessageHash [32]byte, _sig []byte) (common.Address, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "recover", _ethSignedMessageHash, _sig)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Recover is a free data retrieval call binding the contract method 0x19045a25.
//
// Solidity: function recover(bytes32 _ethSignedMessageHash, bytes _sig) pure returns(address)
func (_TssGroupManager *TssGroupManagerSession) Recover(_ethSignedMessageHash [32]byte, _sig []byte) (common.Address, error) {
	return _TssGroupManager.Contract.Recover(&_TssGroupManager.CallOpts, _ethSignedMessageHash, _sig)
}

// Recover is a free data retrieval call binding the contract method 0x19045a25.
//
// Solidity: function recover(bytes32 _ethSignedMessageHash, bytes _sig) pure returns(address)
func (_TssGroupManager *TssGroupManagerCallerSession) Recover(_ethSignedMessageHash [32]byte, _sig []byte) (common.Address, error) {
	return _TssGroupManager.Contract.Recover(&_TssGroupManager.CallOpts, _ethSignedMessageHash, _sig)
}

// StakingSlash is a free data retrieval call binding the contract method 0xcf4c8a7b.
//
// Solidity: function stakingSlash() view returns(address)
func (_TssGroupManager *TssGroupManagerCaller) StakingSlash(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "stakingSlash")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// StakingSlash is a free data retrieval call binding the contract method 0xcf4c8a7b.
//
// Solidity: function stakingSlash() view returns(address)
func (_TssGroupManager *TssGroupManagerSession) StakingSlash() (common.Address, error) {
	return _TssGroupManager.Contract.StakingSlash(&_TssGroupManager.CallOpts)
}

// StakingSlash is a free data retrieval call binding the contract method 0xcf4c8a7b.
//
// Solidity: function stakingSlash() view returns(address)
func (_TssGroupManager *TssGroupManagerCallerSession) StakingSlash() (common.Address, error) {
	return _TssGroupManager.Contract.StakingSlash(&_TssGroupManager.CallOpts)
}

// TssActiveMemberInfo is a free data retrieval call binding the contract method 0xb3bd9ac4.
//
// Solidity: function tssActiveMemberInfo(bytes ) view returns(bytes publicKey, address nodeAddress, uint8 status)
func (_TssGroupManager *TssGroupManagerCaller) TssActiveMemberInfo(opts *bind.CallOpts, arg0 []byte) (struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "tssActiveMemberInfo", arg0)

	outstruct := new(struct {
		PublicKey   []byte
		NodeAddress common.Address
		Status      uint8
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.PublicKey = *abi.ConvertType(out[0], new([]byte)).(*[]byte)
	outstruct.NodeAddress = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)
	outstruct.Status = *abi.ConvertType(out[2], new(uint8)).(*uint8)

	return *outstruct, err

}

// TssActiveMemberInfo is a free data retrieval call binding the contract method 0xb3bd9ac4.
//
// Solidity: function tssActiveMemberInfo(bytes ) view returns(bytes publicKey, address nodeAddress, uint8 status)
func (_TssGroupManager *TssGroupManagerSession) TssActiveMemberInfo(arg0 []byte) (struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}, error) {
	return _TssGroupManager.Contract.TssActiveMemberInfo(&_TssGroupManager.CallOpts, arg0)
}

// TssActiveMemberInfo is a free data retrieval call binding the contract method 0xb3bd9ac4.
//
// Solidity: function tssActiveMemberInfo(bytes ) view returns(bytes publicKey, address nodeAddress, uint8 status)
func (_TssGroupManager *TssGroupManagerCallerSession) TssActiveMemberInfo(arg0 []byte) (struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}, error) {
	return _TssGroupManager.Contract.TssActiveMemberInfo(&_TssGroupManager.CallOpts, arg0)
}

// VerifySign is a free data retrieval call binding the contract method 0x3231a7f0.
//
// Solidity: function verifySign(bytes32 _message, bytes _sig) view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) VerifySign(opts *bind.CallOpts, _message [32]byte, _sig []byte) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "verifySign", _message, _sig)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VerifySign is a free data retrieval call binding the contract method 0x3231a7f0.
//
// Solidity: function verifySign(bytes32 _message, bytes _sig) view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) VerifySign(_message [32]byte, _sig []byte) (bool, error) {
	return _TssGroupManager.Contract.VerifySign(&_TssGroupManager.CallOpts, _message, _sig)
}

// VerifySign is a free data retrieval call binding the contract method 0x3231a7f0.
//
// Solidity: function verifySign(bytes32 _message, bytes _sig) view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) VerifySign(_message [32]byte, _sig []byte) (bool, error) {
	return _TssGroupManager.Contract.VerifySign(&_TssGroupManager.CallOpts, _message, _sig)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_TssGroupManager *TssGroupManagerTransactor) Initialize(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "initialize")
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_TssGroupManager *TssGroupManagerSession) Initialize() (*types.Transaction, error) {
	return _TssGroupManager.Contract.Initialize(&_TssGroupManager.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) Initialize() (*types.Transaction, error) {
	return _TssGroupManager.Contract.Initialize(&_TssGroupManager.TransactOpts)
}

// MemberJail is a paid mutator transaction binding the contract method 0x254ff981.
//
// Solidity: function memberJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) MemberJail(opts *bind.TransactOpts, _publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "memberJail", _publicKey)
}

// MemberJail is a paid mutator transaction binding the contract method 0x254ff981.
//
// Solidity: function memberJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) MemberJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// MemberJail is a paid mutator transaction binding the contract method 0x254ff981.
//
// Solidity: function memberJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) MemberJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// MemberUnJail is a paid mutator transaction binding the contract method 0x429ec49c.
//
// Solidity: function memberUnJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) MemberUnJail(opts *bind.TransactOpts, _publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "memberUnJail", _publicKey)
}

// MemberUnJail is a paid mutator transaction binding the contract method 0x429ec49c.
//
// Solidity: function memberUnJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) MemberUnJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberUnJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// MemberUnJail is a paid mutator transaction binding the contract method 0x429ec49c.
//
// Solidity: function memberUnJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) MemberUnJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberUnJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// RemoveMember is a paid mutator transaction binding the contract method 0x7a952c11.
//
// Solidity: function removeMember(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) RemoveMember(opts *bind.TransactOpts, _publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "removeMember", _publicKey)
}

// RemoveMember is a paid mutator transaction binding the contract method 0x7a952c11.
//
// Solidity: function removeMember(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) RemoveMember(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.RemoveMember(&_TssGroupManager.TransactOpts, _publicKey)
}

// RemoveMember is a paid mutator transaction binding the contract method 0x7a952c11.
//
// Solidity: function removeMember(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) RemoveMember(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.RemoveMember(&_TssGroupManager.TransactOpts, _publicKey)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_TssGroupManager *TssGroupManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_TssGroupManager *TssGroupManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _TssGroupManager.Contract.RenounceOwnership(&_TssGroupManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _TssGroupManager.Contract.RenounceOwnership(&_TssGroupManager.TransactOpts)
}

// SetGroupPublicKey is a paid mutator transaction binding the contract method 0x4679b366.
//
// Solidity: function setGroupPublicKey(bytes _publicKey, bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) SetGroupPublicKey(opts *bind.TransactOpts, _publicKey []byte, _groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "setGroupPublicKey", _publicKey, _groupPublicKey)
}

// SetGroupPublicKey is a paid mutator transaction binding the contract method 0x4679b366.
//
// Solidity: function setGroupPublicKey(bytes _publicKey, bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) SetGroupPublicKey(_publicKey []byte, _groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetGroupPublicKey(&_TssGroupManager.TransactOpts, _publicKey, _groupPublicKey)
}

// SetGroupPublicKey is a paid mutator transaction binding the contract method 0x4679b366.
//
// Solidity: function setGroupPublicKey(bytes _publicKey, bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) SetGroupPublicKey(_publicKey []byte, _groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetGroupPublicKey(&_TssGroupManager.TransactOpts, _publicKey, _groupPublicKey)
}

// SetStakingSlash is a paid mutator transaction binding the contract method 0xfd3eb81f.
//
// Solidity: function setStakingSlash(address _address) returns()
func (_TssGroupManager *TssGroupManagerTransactor) SetStakingSlash(opts *bind.TransactOpts, _address common.Address) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "setStakingSlash", _address)
}

// SetStakingSlash is a paid mutator transaction binding the contract method 0xfd3eb81f.
//
// Solidity: function setStakingSlash(address _address) returns()
func (_TssGroupManager *TssGroupManagerSession) SetStakingSlash(_address common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetStakingSlash(&_TssGroupManager.TransactOpts, _address)
}

// SetStakingSlash is a paid mutator transaction binding the contract method 0xfd3eb81f.
//
// Solidity: function setStakingSlash(address _address) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) SetStakingSlash(_address common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetStakingSlash(&_TssGroupManager.TransactOpts, _address)
}

// SetTssGroupMember is a paid mutator transaction binding the contract method 0x1a47931b.
//
// Solidity: function setTssGroupMember(uint256 _threshold, bytes[] _batchPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) SetTssGroupMember(opts *bind.TransactOpts, _threshold *big.Int, _batchPublicKey [][]byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "setTssGroupMember", _threshold, _batchPublicKey)
}

// SetTssGroupMember is a paid mutator transaction binding the contract method 0x1a47931b.
//
// Solidity: function setTssGroupMember(uint256 _threshold, bytes[] _batchPublicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) SetTssGroupMember(_threshold *big.Int, _batchPublicKey [][]byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetTssGroupMember(&_TssGroupManager.TransactOpts, _threshold, _batchPublicKey)
}

// SetTssGroupMember is a paid mutator transaction binding the contract method 0x1a47931b.
//
// Solidity: function setTssGroupMember(uint256 _threshold, bytes[] _batchPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) SetTssGroupMember(_threshold *big.Int, _batchPublicKey [][]byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetTssGroupMember(&_TssGroupManager.TransactOpts, _threshold, _batchPublicKey)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TssGroupManager *TssGroupManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TssGroupManager *TssGroupManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TransferOwnership(&_TssGroupManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TransferOwnership(&_TssGroupManager.TransactOpts, newOwner)
}

// TssGroupManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the TssGroupManager contract.
type TssGroupManagerInitializedIterator struct {
	Event *TssGroupManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerInitialized represents a Initialized event raised by the TssGroupManager contract.
type TssGroupManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_TssGroupManager *TssGroupManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*TssGroupManagerInitializedIterator, error) {

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerInitializedIterator{contract: _TssGroupManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_TssGroupManager *TssGroupManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *TssGroupManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerInitialized)
				if err := _TssGroupManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_TssGroupManager *TssGroupManagerFilterer) ParseInitialized(log types.Log) (*TssGroupManagerInitialized, error) {
	event := new(TssGroupManagerInitialized)
	if err := _TssGroupManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssGroupManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the TssGroupManager contract.
type TssGroupManagerOwnershipTransferredIterator struct {
	Event *TssGroupManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerOwnershipTransferred represents a OwnershipTransferred event raised by the TssGroupManager contract.
type TssGroupManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_TssGroupManager *TssGroupManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*TssGroupManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerOwnershipTransferredIterator{contract: _TssGroupManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_TssGroupManager *TssGroupManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *TssGroupManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerOwnershipTransferred)
				if err := _TssGroupManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_TssGroupManager *TssGroupManagerFilterer) ParseOwnershipTransferred(log types.Log) (*TssGroupManagerOwnershipTransferred, error) {
	event := new(TssGroupManagerOwnershipTransferred)
	if err := _TssGroupManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssGroupManagerTssActiveMemberAppendedIterator is returned from FilterTssActiveMemberAppended and is used to iterate over the raw logs and unpacked data for TssActiveMemberAppended events raised by the TssGroupManager contract.
type TssGroupManagerTssActiveMemberAppendedIterator struct {
	Event *TssGroupManagerTssActiveMemberAppended // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerTssActiveMemberAppendedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerTssActiveMemberAppended)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerTssActiveMemberAppended)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerTssActiveMemberAppendedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerTssActiveMemberAppendedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerTssActiveMemberAppended represents a TssActiveMemberAppended event raised by the TssGroupManager contract.
type TssGroupManagerTssActiveMemberAppended struct {
	RoundId          *big.Int
	GroupKey         []byte
	ActiveTssMembers [][]byte
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterTssActiveMemberAppended is a free log retrieval operation binding the contract event 0x61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b66.
//
// Solidity: event tssActiveMemberAppended(uint256 _roundId, bytes _groupKey, bytes[] activeTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) FilterTssActiveMemberAppended(opts *bind.FilterOpts) (*TssGroupManagerTssActiveMemberAppendedIterator, error) {

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "tssActiveMemberAppended")
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerTssActiveMemberAppendedIterator{contract: _TssGroupManager.contract, event: "tssActiveMemberAppended", logs: logs, sub: sub}, nil
}

// WatchTssActiveMemberAppended is a free log subscription operation binding the contract event 0x61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b66.
//
// Solidity: event tssActiveMemberAppended(uint256 _roundId, bytes _groupKey, bytes[] activeTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) WatchTssActiveMemberAppended(opts *bind.WatchOpts, sink chan<- *TssGroupManagerTssActiveMemberAppended) (event.Subscription, error) {

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "tssActiveMemberAppended")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerTssActiveMemberAppended)
				if err := _TssGroupManager.contract.UnpackLog(event, "tssActiveMemberAppended", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTssActiveMemberAppended is a log parse operation binding the contract event 0x61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b66.
//
// Solidity: event tssActiveMemberAppended(uint256 _roundId, bytes _groupKey, bytes[] activeTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) ParseTssActiveMemberAppended(log types.Log) (*TssGroupManagerTssActiveMemberAppended, error) {
	event := new(TssGroupManagerTssActiveMemberAppended)
	if err := _TssGroupManager.contract.UnpackLog(event, "tssActiveMemberAppended", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssGroupManagerTssGroupMemberAppendIterator is returned from FilterTssGroupMemberAppend and is used to iterate over the raw logs and unpacked data for TssGroupMemberAppend events raised by the TssGroupManager contract.
type TssGroupManagerTssGroupMemberAppendIterator struct {
	Event *TssGroupManagerTssGroupMemberAppend // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerTssGroupMemberAppendIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerTssGroupMemberAppend)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerTssGroupMemberAppend)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerTssGroupMemberAppendIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerTssGroupMemberAppendIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerTssGroupMemberAppend represents a TssGroupMemberAppend event raised by the TssGroupManager contract.
type TssGroupManagerTssGroupMemberAppend struct {
	RoundId            *big.Int
	Threshold          *big.Int
	InActiveTssMembers [][]byte
	Raw                types.Log // Blockchain specific contextual infos
}

// FilterTssGroupMemberAppend is a free log retrieval operation binding the contract event 0xfa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e.
//
// Solidity: event tssGroupMemberAppend(uint256 _roundId, uint256 _threshold, bytes[] _inActiveTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) FilterTssGroupMemberAppend(opts *bind.FilterOpts) (*TssGroupManagerTssGroupMemberAppendIterator, error) {

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "tssGroupMemberAppend")
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerTssGroupMemberAppendIterator{contract: _TssGroupManager.contract, event: "tssGroupMemberAppend", logs: logs, sub: sub}, nil
}

// WatchTssGroupMemberAppend is a free log subscription operation binding the contract event 0xfa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e.
//
// Solidity: event tssGroupMemberAppend(uint256 _roundId, uint256 _threshold, bytes[] _inActiveTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) WatchTssGroupMemberAppend(opts *bind.WatchOpts, sink chan<- *TssGroupManagerTssGroupMemberAppend) (event.Subscription, error) {

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "tssGroupMemberAppend")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerTssGroupMemberAppend)
				if err := _TssGroupManager.contract.UnpackLog(event, "tssGroupMemberAppend", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTssGroupMemberAppend is a log parse operation binding the contract event 0xfa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e.
//
// Solidity: event tssGroupMemberAppend(uint256 _roundId, uint256 _threshold, bytes[] _inActiveTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) ParseTssGroupMemberAppend(log types.Log) (*TssGroupManagerTssGroupMemberAppend, error) {
	event := new(TssGroupManagerTssGroupMemberAppend)
	if err := _TssGroupManager.contract.UnpackLog(event, "tssGroupMemberAppend", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
